import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from rapidfuzz import fuzz
from PIL import Image
import base64

# --- Carregamento de dados ---
@st.cache_data
def load_data():
    df = pd.read_csv('alunos_pii_none.csv', delimiter=';', header=None, on_bad_lines='skip')
    return df

@st.cache_data
def load_excel_data():
    df = pd.read_excel('matriculas_modificada.xlsx', sheet_name='Planilha2')
    return df

@st.cache_data
def df_processos():
    # Aqui use os dados reais lendo do arquivo
    # Se quiser, descomente para ler do arquivo:
    # return pd.read_excel('processos_seletivos_pii_none.xlsx')

    # Exemplo de DataFrame para testes
    data = {
        'Motivo Recusa Curso Ofertado': [
            'n√£o tenho disponibilidade nesse hor√°rio',
            'quero come√ßar pelo fundamentos aws',
            'porque ainda n√£o tenho conhecimentos basicos',
            'n√£o √© do meu interesse',
            'focar em uma trilha j√° planejada por mim',
            'obrigado'
        ]
    }
    return pd.DataFrame(data)

# --- Categorias e sin√¥nimos ---
categorias = {
    'Indisponibilidade de datas e hor√°rios': [
        'n√£o tenho disponibilidade nesse hor√°rio',
        'indisponibilidade de tempo',
        'hor√°rio',
        'n√£o tenho disponibilidade',
        'hor√°rio noturno indispon√≠vel',
        'trabalho durante a noite',
        'os dias n√£o s√£o compativel',
        'n√£o consigo particitar todas as segundas',
        's√≥ tenho ter√ßa-feira livre, n√£o posso na segunda-feira',
        'por enquanto n√£o posso fazer aulas as segundas √† noite',
        'o motivo √© porque nas segundas tenho aulas de ingl√™s das 19h at√© 20h',
        'n√£o conseguiria ver as aulas por conta que fa√ßo faculdade no turno da tarde/noite',
        'infelizmente eu trabalho das 22:30 √†s 6:02. seria imposs√≠vel comparecer √†s aulas',
        'n√£o consigo estar presente no hor√°rio',
        'no momento, n√£o consigo estar presente em todos os dias das aulas ao vivo',
    ],
    'Iniciar pelos fundamentos': [
        'quero come√ßar pelo fundamentos aws',
        'gostaria de come√ßar pelo b√°sico, para ter uma boa base',
        'desejo o fundamental no momento',
        'gostaria de participar do fundamentos aws',
        'prefiro a turma de fundamentos',
        'po√≠s quero o de aws',
        'queria fazer o iniciante mesmo',
        'agora tenho mais interesse em tirar o certificado b√°sico para a minha carreira de desenvolvedor',
        'quero aprender do come√ßo, tenho pouca experi√™ncia',
        'n√£o tenho certeza se conseguiria acompanhar o restante da turma, prefiro come√ßar com o b√°sico e me habituar com os conceitos',
        'quero realizar o primeiro curso para conseguir a certifica√ß√£o inicial',
        'desejo iniciar no curso b√°sico para garantir um maior aprendizado',
        'eu fico lisonjeado que eu possa ter recebido essa proposta pro n√≠vel mais avan√ßado, mas eu mesmo acredito que meu conhecimento ainda n√£o est√° nesse n√≠vel, e por isso, pretendo come√ßar do in√≠cio',
        'o que eu respondi no formul√°rio foi conhecimento que adquiri atrav√©s de problemas que apareceu na minha vida, eu me sinto mais confort√°vel em fazer o curso do zero'
    ],
    'N√£o possui conhecimentos b√°sicos': [
        'porque ainda n√£o tenho conhecimentos basicos',
        'porque n√£o sinto que tenho conhecimento avan√ßado para poder fazer um curso mais avan√ßado',
        'n√£o acho que tenho os conhecimentos m√≠nimos necess√°rios ainda.',
        'desejo ver os conte√∫dos do in√≠cio para fixar os conhecimentos e posteriormente partir para o mais avan√ßado, e n√£o pular as etapas necess√°rias e b√°sicas.',
        'acredito que n√£o estou pronto para um curso intermedi√°rio',
        'tenho conhecimentos muito superficiais na √°rea',
        'sendo uma turma avan√ßada, n√£o serei tao capaz de acompanhar',
        'prefiro come√ßar do iniciante. tem muitas coisa que n√£o vi ainda',
        'tenho a d√∫vida se irei conseguir acompanhar o n√≠vel da turma, estou a 7 anos fora da √°rea de inform√°tica',
    ],
    'Foco em outra trilha de aprendizado': [
        'focar em uma trilha j√° planejada por mim',
        'n√£o conseguiria focar em aws que est√° se aprofundando e em ms900 ao mesmo tempo',
        'estarei focado no curso aws practitioner',
        'procurando me especializar somente na aws'
    ],
    'N√£o possui interesse no curso': [
        'n√£o √© do meu interesse',
        'obrigado',
        'contato por e-mail'
    ]
}

# --- Fun√ß√£o para padronizar motivos ---
def padronizar_motivos(motivo):
    print(motivo)
    if not isinstance(motivo, str):
        return motivo

    melhor_categoria = None
    melhor_score = 0

    for categoria, sinonimos in categorias.items():
        for sinonimo in sinonimos:
            score = fuzz.partial_ratio(motivo.lower(), sinonimo.lower())
            if score > melhor_score:
                melhor_categoria = categoria
                melhor_score = score

    return melhor_categoria if melhor_score >= 60 else motivo

def pagina_inicio():
    # st.set_page_config(page_title="An√°lise Escola da Nuvem", layout="wide")
    st.title("üìä Painel de An√°lise - Escola da Nuvem")
    st.markdown("""
        <h4 style='font-size:18px;'>Este painel interativo apresenta uma an√°lise completa dos dados dos alunos da Escola da Nuvem,
        com foco em indicadores de desempenho, empregabilidade, est√°gios e motivos de evas√£o. Acompanhe a jornada dos estudantes e descubra
        oportunidades de melhoria e destaque.</h4>
    """, unsafe_allow_html=True)

    # Carregando dados
    df_excel = load_excel_data()
    total_alunos = df_excel.shape[0]
    aprovados = df_excel[df_excel['Estagio'].str.lower() == 'aprovado'].shape[0]
    reprovados = df_excel[df_excel['Estagio'].str.lower() == 'reprovado'].shape[0]
    # empregados = df_excel[df_excel['Empregado'].astype(str).str.lower() == 'sim'].shape[0]
    
    # Exibindo m√©tricas principais
    col1, col2, col3, col4 = st.columns(4)
    col1.metric("Total de Alunos", total_alunos)
    col2.metric("Aprovados", aprovados)
    col3.metric("Reprovados", reprovados)
    # col4.metric("Com Emprego", empregados)

    # Gr√°fico de distribui√ß√£o
    st.markdown("### Distribui√ß√£o Geral dos Est√°gios")
    estagios = df_excel['Estagio'].astype(str).str.lower().str.strip()
    estagios = estagios.replace({
        'desist√£¬™ncia': 'desistencia',
        'desist√™ncia': 'desistencia',
        'desistiu': 'desistencia',
        'sem interesse': 'desistencia',
        'nan': 'desconhecido',
    })
    estagios = estagios.fillna('desconhecido')
    status_counts = estagios.value_counts()

    fig, ax = plt.subplots(figsize=(6, 4))
    status_counts.plot(kind='bar', color='mediumseagreen', ax=ax)
    ax.set_title('Situa√ß√£o dos Alunos')
    ax.set_ylabel('Quantidade')
    ax.set_xlabel('Est√°gio')
    st.pyplot(fig)

    st.info("Use o menu lateral para explorar an√°lises detalhadas por categoria.")

def pagina_alunos():
    st.title("üë®‚Äçüéì An√°lise de Alunos")

    st.markdown("### 1. Origem dos Alunos Imigrantes")
    st.markdown("""
    <div style='text-align: justify; font-size: 18px'>
        A imagem abaixo mostra a <strong>origem dos alunos imigrantes</strong> matriculados nos cursos oferecidos pela Escola da Nuvem. 
        Esse dado √© relevante porque evidencia a presen√ßa de alunos que nasceram fora do Brasil, mas que, atualmente, est√£o em busca de capacita√ß√£o profissional na √°rea de tecnologia, contribuindo com a diversidade cultural dentro das turmas.<br><br>
    </div>
    """, unsafe_allow_html=True)

    def get_base64_image(image_path):
        with open(image_path, "rb") as f:
            data = f.read()
        return base64.b64encode(data).decode()

    image_base64 = get_base64_image("imigrantes.png")

    # Mostrar imagem centralizada
    st.markdown(f"""
        <div style='text-align: center'>
            <img src='data:image/png;base64,{image_base64}' width='600' alt='Origem dos alunos imigrantes'/>
            <p><em>Origem dos alunos imigrantes</em></p>
        </div>
        """, unsafe_allow_html=True)

    st.markdown("### 2. Distribui√ß√£o por Faixa Et√°ria")
    st.markdown("""
    <div style='text-align: justify; font-size: 18px'>
          A distribui√ß√£o da <strong>faixa et√°ria</strong> dos alunos matriculados fornece informa√ß√µes importantes sobre o perfil et√°rio do p√∫blico atendido.
    A maioria dos alunos se concentra entre 18 e 29 anos, o que indica uma forte presen√ßa de jovens adultos em in√≠cio de carreira ou em processo de transi√ß√£o profissional.<br><br>
    </div>
    """, unsafe_allow_html=True)

    def get_base64_image(image_path):
        with open(image_path, "rb") as f:
            data = f.read()
        return base64.b64encode(data).decode()

    image_base64 = get_base64_image("faixa_etaria.png")

    # Mostrar imagem centralizada
    st.markdown(f"""
        <div style='text-align: center'>
            <img src='data:image/png;base64,{image_base64}' width='800' alt='Origem dos alunos imigrantes'/>
            <p><em>Origem dos alunos imigrantes</em></p>
        </div>
        """, unsafe_allow_html=True)

    st.markdown("### 3. M√©dia de Idade dos Alunos")
    st.markdown("""
    <div style='text-align: justify; font-size: 18px'>
        A <strong>m√©dia de idade por g√™nero</strong> dos alunos da Escola da Nuvem oferece um panorama sobre o perfil et√°rio de homens, mulheres e pessoas que se identificam com outros g√™neros nos cursos oferecidos.<br>
    A an√°lise mostra que a idade m√©dia entre os g√™neros √© relativamente pr√≥xima, o que evidencia um equil√≠brio geracional. Essa proximidade pode indicar que o acesso √†s oportunidades de forma√ß√£o em tecnologia est√° sendo promovido de maneira igualit√°ria, independentemente do g√™nero.<br><br>
    </div>
    """, unsafe_allow_html=True)

    def get_base64_image(image_path):
        with open(image_path, "rb") as f:
            data = f.read()
        return base64.b64encode(data).decode()

    image_base64 = get_base64_image("media_idade.png")

    # Mostrar imagem centralizada
    st.markdown(f"""
        <div style='text-align: center'>
            <img src='data:image/png;base64,{image_base64}' width='800' alt='Origem dos alunos imigrantes'/>
            <p><em>Origem dos alunos imigrantes</em></p>
        </div>
        """, unsafe_allow_html=True)
    

    # media_idade_img = Image.open("media_idade.png")
    # st.image(media_idade_img, caption="M√©dia de idade dos alunos", use_column_width=True)

def pagina_empregabilidade():
    st.title("üíº An√°lise de Empregabilidade")
    st.markdown("""
<div style='text-align: justify; font-size: 18px'>
    A imagem abaixo apresenta a <strong>situa√ß√£o de emprego atual</strong> dos alunos. 
</div>
""", unsafe_allow_html=True)

    st.markdown("### Situa√ß√£o de emprego")
    def get_base64_image(image_path):
        with open(image_path, "rb") as f:
            data = f.read()
        return base64.b64encode(data).decode()

    image_base64 = get_base64_image("emprego.png")
    st.markdown(f"""
    <div style='text-align: center'>
        <img src='data:image/png;base64,{image_base64}' width='1000'/>
        <p><em>Situa√ß√£o de emprego atual dos alunos da Escola da Nuvem</em></p>
    </div>
    """, unsafe_allow_html=True)

def pagina_desempenho():

    def get_base64_image(image_path):
        with open(image_path, "rb") as f:
            data = f.read()
        return base64.b64encode(data).decode()

    st.title("üìä An√°lise de Desempenho")
    st.markdown("""
<div style='text-align: justify; font-size: 18px'>
    Esta se√ß√£o apresenta uma an√°lise do <strong>desempenho acad√™mico</strong> dos alunos da Escola da Nuvem, com base na m√©dia geral das notas e no desempenho por disciplina.
    Esses indicadores ajudam a entender o n√≠vel de aprendizado dos estudantes, identificar poss√≠veis dificuldades em √°reas espec√≠ficas e orientar a√ß√µes para melhoria cont√≠nua da forma√ß√£o.<br><br>
</div>
""", unsafe_allow_html=True)

    # M√©dia das Notas
    st.markdown("### 1. M√©dia Geral das Notas")
    st.markdown("""
<div style='text-align: justify; font-size: 18px'>
    A imagem abaixo mostra a <strong>m√©dia geral de notas</strong> obtidas pelos alunos nos cursos. 
    Essa m√©trica permite avaliar o desempenho global da turma e a efetividade das trilhas educacionais.<br><br>
</div>
""", unsafe_allow_html=True)

    image_base64 = get_base64_image("media_nota.png")
    st.markdown(f"""
    <div style='text-align: center'>
        <img src='data:image/png;base64,{image_base64}' width='1000'/>
        <p><em>M√©dia geral de desempenho dos alunos</em></p>
    </div>
    """, unsafe_allow_html=True)

    # Notas por Mat√©ria
    st.markdown("### 2. Notas por Mat√©ria")
    st.markdown("""
<div style='text-align: justify; font-size: 18px'>
    O gr√°fico a seguir apresenta as <strong>notas m√©dias por mat√©ria</strong>, permitindo uma an√°lise detalhada do desempenho em cada √°rea do conhecimento. 
    Esse tipo de an√°lise √© importante para identificar disciplinas com maior necessidade de refor√ßo e promover interven√ß√µes pedag√≥gicas mais assertivas.<br><br>
</div>
""", unsafe_allow_html=True)

    image_base64 = get_base64_image("nota_materia.png")
    st.markdown(f"""
    <div style='text-align: center'>
        <img src='data:image/png;base64,{image_base64}' width='1000'/>
        <p><em>Desempenho por disciplina</em></p><br><br>
    </div>
    """, unsafe_allow_html=True)

def pagina_estagios():

    def get_base64_image(image_path):
        with open(image_path, "rb") as f:
            data = f.read()
        return base64.b64encode(data).decode()
    
    st.title("üìà An√°lise de Est√°gios")
    st.markdown("""
<div style='text-align: justify; font-size: 18px'>
    Esta se√ß√£o apresenta uma an√°lise do <strong>Distribui√ß√£o dos alunos por est√°gio</strong> (aprovado, reprovado, desist√™ncia, etc.<br><br>
</div>
""", unsafe_allow_html=True)

    # M√©dia das Notas
    # st.markdown("### 1. M√©dia Geral das Notas")
    st.markdown("""
<div style='text-align: justify; font-size: 18px'> A imagem abaixo apresenta a distribui√ß√£o dos alunos de acordo com seu <strong>status acad√™mico padronizado</strong>. Essa visualiza√ß√£o permite compreender a propor√ß√£o de concluintes, desistentes, reprovados e alunos em curso, al√©m de casos com status n√£o identificado. Essas informa√ß√µes s√£o essenciais para o monitoramento da trajet√≥ria dos estudantes e para o planejamento de a√ß√µes de perman√™ncia e sucesso acad√™mico.<br><br> </div>
""", unsafe_allow_html=True)

    image_base64 = get_base64_image("estagio.png")
    st.markdown(f"""
    <div style='text-align: center'>
        <img src='data:image/png;base64,{image_base64}' width='1000'/>
        <p><em>Alunos que foram aprovados, reprovados, desistiram ou est√£o no est√°gio</em></p>
    </div>
    """, unsafe_allow_html=True)

    # st.title("üìà An√°lise de Est√°gios")
    df = load_excel_data()
    df['Estagio'] = df['Estagio'].astype(str).str.strip().str.lower()
    df['Estagio'] = df['Estagio'].replace({
        'desist√£¬™ncia': 'desistencia',
        'desist√™ncia': 'desistencia',
        'desistiu': 'desistencia',
        'sem interesse': 'desistencia',
        'desist√™ncia.': 'desistencia',
        'nan': 'desconhecido',
    })


    # df['Estagio'] = df['Estagio'].fillna('desconhecido')
    # status_counts = df['Estagio'].value_counts().reset_index()
    # status_counts.columns = ['Status', 'Quantidade']
    # plt.figure(figsize=(8, 5))
    # sns.barplot(data=status_counts, x='Status', y='Quantidade', hue='Status', palette='Set2', legend=False)
    # plt.title('Est√°gio dos Alunos (Padronizado)')
    # plt.ylabel('Quantidade')
    # plt.xlabel('Status')
    # plt.xticks(rotation=45)
    # plt.tight_layout()
    # st.pyplot(plt)

def processo_seletivo():

    def get_base64_image(image_path):
        with open(image_path, "rb") as f:
            data = f.read()
        return base64.b64encode(data).decode()
    
    st.title("üìâ Motivos de Recusa dos Cursos Ofertados")
    st.markdown(
        "<div style='text-align: justify; font-size: 18px'>Nesta se√ß√£o, analisamos os principais motivos relatados pelos candidatos para recusarem os cursos ofertados. Essa an√°lise ajuda a compreender os desafios enfrentados pelos alunos em potencial. <br><br></div>",
        unsafe_allow_html=True
    )

    st.markdown("""
<div style='text-align: justify; font-size: 18px'>  A imagem abaixo apresenta os <strong>principais motivos de recusa</strong> dos cursos ofertados pelos candidatos. A identifica√ß√£o dessas raz√µes ‚Äî como incompatibilidade de datas, aus√™ncia de conhecimentos pr√©vios ou falta de interesse ‚Äî permite compreender as barreiras enfrentadas pelos participantes e aperfei√ßoar o desenho das forma√ß√µes. Esses dados s√£o fundamentais para aumentar a ades√£o e o engajamento nas pr√≥ximas ofertas educacionais.<br><br> </div>
""", unsafe_allow_html=True)

    image_base64 = get_base64_image("recusa1.1.jpg")
    st.markdown(f"""
    <div style='text-align: center'>
        <img src='data:image/png;base64,{image_base64}' width='1000'/>
        <p><em>Motivos informados pelos candidatos para n√£o participarem dos cursos ofertados</em></p>
    </div>
    """, unsafe_allow_html=True)

    
    # df = df_processos()

    #     # Padroniza os motivos
    # df['Motivo Recusa Curso Ofertado'] = df['Motivo Recusa Curso Ofertado'].map(padronizar_motivos)
    # contagem = df['Motivo Recusa Curso Ofertado'].value_counts()
    # print(contagem)
    # fig, ax = plt.subplots(figsize=(10, 6))
    # contagem.plot(kind='bar', ax=ax, color='skyblue')
    # ax.set_title('Principais Motivos de Recusa dos Cursos Ofertados')
    # ax.set_xlabel('Motivo de Recusa')
    # ax.set_ylabel('Quantidade de Candidatos')
    # for i, v in enumerate(contagem):
    #     ax.text(i, v + 0.2, str(v), ha='center', va='bottom', fontsize=8)
    #     st.pyplot(fig)

# --- Configura√ß√£o da p√°gina e navega√ß√£o ---
st.set_page_config(page_title="An√°lise Escola da Nuvem", layout="wide")

st.sidebar.header("Navega√ß√£o")
opcao = st.sidebar.selectbox(
    "Escolha uma p√°gina",
    ["In√≠cio", "Alunos", "Empregabilidade", "Desempenho", "Est√°gios", "Processo Seletivo"]
)

if opcao == "In√≠cio":
    pagina_inicio()
elif opcao == "Alunos":
    pagina_alunos()
elif opcao == "Empregabilidade":
    pagina_empregabilidade()
elif opcao == "Desempenho":
    pagina_desempenho()
elif opcao == "Est√°gios":
    pagina_estagios()
elif opcao == "Processo Seletivo":
    processo_seletivo()
