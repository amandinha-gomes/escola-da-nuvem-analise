import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from rapidfuzz import fuzz

# --- Carregamento de dados ---
@st.cache_data
def load_data():
    df = pd.read_csv('alunos_pii_none.csv', delimiter=';', header=None, on_bad_lines='skip')
    return df

@st.cache_data
def load_excel_data():
    df = pd.read_excel('matriculas_modificada.xlsx', sheet_name='Planilha2')
    return df

@st.cache_data
def df_processos():
    return pd.read_excel('processos_seletivos_pii_none.xlsx')


# --- Categorias e sin√¥nimos ---
categorias = {
    'Indisponibilidade de datas e hor√°rios': [
        'n√£o tenho disponibilidade nesse hor√°rio',
        'indisponibilidade de tempo',
        'hor√°rio',
        'n√£o tenho disponibilidade',
        'hor√°rio noturno indispon√≠vel',
        'trabalho durante a noite',
        'os dias n√£o s√£o compativel',
        'n√£o consigo particitar todas as segundas',
        's√≥ tenho ter√ßa-feira livre, n√£o posso na segunda-feira',
        'por enquanto n√£o posso fazer aulas as segundas √† noite',
        'o motivo √© porque nas segundas tenho aulas de ingl√™s das 19h at√© 20h',
        'n√£o conseguiria ver as aulas por conta que fa√ßo faculdade no turno da tarde/noite',
        'infelizmente eu trabalho das 22:30 √†s 6:02. seria imposs√≠vel comparecer √†s aulas',
        'n√£o consigo estar presente no hor√°rio',
        'no momento, n√£o consigo estar presente em todos os dias das aulas ao vivo',
        'infelizmente nao consigo dispor desse tempo durante 4 dias x 16 semanas',
        'tenho compromissos nas quartas Feiras apartir das 19:00.',
        'Dias da aula n√£o conciliam com  o trabalho',
        'As ter√ßas a noite j√° tenho compromisso neste ano e mudar agora me atrapalha',
        'Consegui uma bolsa gratuita na ProZ de programa√ß√£o que tem aulas on line justamente na segunda e na quarta feira.\nN√£o posso perder essa oportunidade. Posso ficar com o curso de ter√ßa e quinta na escola da nuvem?',
        'Dias alternados pois trabalho em alguns dias espec√≠ficos \n\nSe for dias estabelecidos \n\nExemplo\n\nSegunda quarta sexta tranquilo em.faze',
        'estou com uma agente cheia ate outubro'
    ],
    'Iniciar pelos fundamentos': [
        'quero come√ßar pelo fundamentos aws',
        'gostaria de come√ßar pelo b√°sico, para ter uma boa base',
        'desejo o fundamental no momento',
        'gostaria de participar do fundamentos aws',
        'prefiro a turma de fundamentos',
        'po√≠s quero o de aws',
        'queria fazer o iniciante mesmo',
        'agora tenho mais interesse em tirar o certificado b√°sico para a minha carreira de desenvolvedor',
        'quero aprender do come√ßo, tenho pouca experi√™ncia',
        'n√£o tenho certeza se conseguiria acompanhar o restante da turma, prefiro come√ßar com o b√°sico e me habituar com os conceitos',
        'quero realizar o primeiro curso para conseguir a certifica√ß√£o inicial',
        'desejo iniciar no curso b√°sico para garantir um maior aprendizado',
        'eu fico lisonjeado que eu possa ter recebido essa proposta pro n√≠vel mais avan√ßado, mas eu mesmo acredito que meu conhecimento ainda n√£o est√° nesse n√≠vel, e por isso, pretendo come√ßar do in√≠cio',
        'o que eu respondi no formul√°rio foi conhecimento que adquiri atrav√©s de problemas que apareceu na minha vida, eu me sinto mais confort√°vel em fazer o curso do zero'
    ],
    'N√£o possui conhecimentos b√°sicos': [
        'porque ainda n√£o tenho conhecimentos basicos',
        'porque n√£o sinto que tenho conhecimento avan√ßado para poder fazer um curso mais avan√ßado',
        'n√£o acho que tenho os conhecimentos m√≠nimos necess√°rios ainda.',
        'desejo ver os conte√∫dos do in√≠cio para fixar os conhecimentos e posteriormente partir para o mais avan√ßado, e n√£o pular as etapas necess√°rias e b√°sicas.',
        'acredito que n√£o estou pronto para um curso intermedi√°rio',
        'tenho conhecimentos muito superficiais na √°rea',
        'sendo uma turma avan√ßada, n√£o serei tao capaz de acompanhar',
        'prefiro come√ßar do iniciante. tem muitas coisa que n√£o vi ainda',
        'tenho a d√∫vida se irei conseguir acompanhar o n√≠vel da turma, estou a 7 anos fora da √°rea de inform√°tica',
    ],
    'Foco em outra trilha de aprendizado': [
        'focar em uma trilha j√° planejada por mim',
        'n√£o conseguiria focar em aws que est√° se aprofundando e em ms900 ao mesmo tempo',
        'estarei focado no curso aws practitioner',
        'procurando me especializar somente na aws'
    ],
    'N√£o possui interesse no curso': [
        'n√£o √© do meu interesse',
        'obrigado',
        'contato por e-mail'
    ],
    'Perda do prazo':[
        'o prazo para inicio do curso j√° passou\nData de in√≠cio:  12 de Julho de 2023. '
    ]
}

# --- Fun√ß√£o para padronizar motivos ---
def padronizar_motivos(motivo):
    print(motivo)
    if not isinstance(motivo, str):
        return motivo

    melhor_categoria = None
    melhor_score = 0

    for categoria, sinonimos in categorias.items():
        for sinonimo in sinonimos:
            score = fuzz.partial_ratio(motivo.lower(), sinonimo.lower())
            if score > melhor_score:
                melhor_categoria = categoria
                melhor_score = score

    return melhor_categoria if melhor_score >= 60 else motivo

# --- Fun√ß√µes das p√°ginas ---
# def pagina_inicio():
#     st.title("Projeto Integrador - Escola da Nuvem")
#     st.write("Bem-vindo √† plataforma de an√°lise dos dados da Escola da Nuvem.")
#     st.info("Use o menu lateral para navegar entre as an√°lises dispon√≠veis.")
#     if st.button("Ir para p√°gina de alunos"):
#         st.session_state.pagina = "Alunos"
#         st.experimental_rerun()

def pagina_inicio():
    # st.set_page_config(page_title="An√°lise Escola da Nuvem", layout="wide")
    st.title("üìä Painel de An√°lise - Escola da Nuvem")
    st.markdown("""
        <h4 style='font-size:18px;'>Este painel interativo apresenta uma an√°lise completa dos dados dos alunos da Escola da Nuvem,
        com foco em indicadores de desempenho, empregabilidade, est√°gios e motivos de evas√£o. Acompanhe a jornada dos estudantes e descubra
        oportunidades de melhoria e destaque.</h4>
    """, unsafe_allow_html=True)

    # Carregando dados
    df_excel = load_excel_data()
    total_alunos = df_excel.shape[0]
    aprovados = df_excel[df_excel['Estagio'].str.lower() == 'aprovado'].shape[0]
    reprovados = df_excel[df_excel['Estagio'].str.lower() == 'reprovado'].shape[0]
    # empregados = df_excel[df_excel['Empregado'].astype(str).str.lower() == 'sim'].shape[0]
    
    # Exibindo m√©tricas principais
    col1, col2, col3, col4 = st.columns(4)
    col1.metric("Total de Alunos", total_alunos)
    col2.metric("Aprovados", aprovados)
    col3.metric("Reprovados", reprovados)
    # col4.metric("Com Emprego", empregados)

    # Gr√°fico de distribui√ß√£o
    st.markdown("### Distribui√ß√£o Geral dos Est√°gios")
    estagios = df_excel['Estagio'].astype(str).str.lower().str.strip()
    estagios = estagios.replace({
        'desist√£¬™ncia': 'desistencia',
        'desist√™ncia': 'desistencia',
        'desistiu': 'desistencia',
        'sem interesse': 'desistencia',
        'nan': 'desconhecido',
    })
    estagios = estagios.fillna('desconhecido')
    status_counts = estagios.value_counts()

    fig, ax = plt.subplots(figsize=(6, 4))
    status_counts.plot(kind='bar', color='mediumseagreen', ax=ax)
    ax.set_title('Situa√ß√£o dos Alunos')
    ax.set_ylabel('Quantidade')
    ax.set_xlabel('Est√°gio')
    st.pyplot(fig)

    st.info("Use o menu lateral para explorar an√°lises detalhadas por categoria.")


def pagina_alunos():
    st.title("üë®‚Äçüéì An√°lise de Alunos")
    st.write("Explore o perfil dos alunos.")
    df = load_data()
    st.dataframe(df)

def pagina_empregabilidade():
    st.title("üíº An√°lise de Empregabilidade")
    st.markdown(
        "<h4 style='font-size:20px;'>Taxa de aprova√ß√£o conforme cria√ß√£o de a√ß√µes de empregabilidade</h4>",
        unsafe_allow_html=True
    )

    df = load_excel_data()
    df['Estagio'] = df['Estagio'].astype(str).str.lower().str.strip()
    df['Criar Empregabilidade'] = df['Criar Empregabilidade'].astype(str).str.lower().str.strip()

    aprovados = df[df['Estagio'] == 'aprovado']['Criar Empregabilidade'].value_counts()
    total = df['Criar Empregabilidade'].value_counts()
    taxa = (aprovados / total * 100).dropna()

    fig, ax = plt.subplots(figsize=(4, 4))
    ax.pie(
        taxa.values,
        labels=taxa.index,
        autopct='%1.1f%%',
        colors=sns.color_palette('autumn', len(taxa)),
        startangle=90,
        textprops={'fontsize': 10}
    )
    ax.axis('equal')
    ax.set_title('Taxa de Aprova√ß√£o (%)', fontsize=8)
    st.pyplot(fig)
    # sns.barplot(x=taxa.index, y=taxa.values, hue=taxa.index, palette='autumn', legend=False)
    # plt.ylabel('Taxa de Aprova√ß√£o (%)')
    # plt.ylim(0, 100)
    # plt.tight_layout()
    

def pagina_evasao():
    st.title("üö™ An√°lise de Evas√£o")
    st.write("Explore os dados de evas√£o escolar.")
    df = load_data()
    st.dataframe(df)

def pagina_reprovacao():
    st.title("‚ùå An√°lise de Reprova√ß√£o")
    st.write("Explore os dados de reprova√ß√£o dos alunos.")
    df = load_data()
    st.dataframe(df)

def pagina_estagios():
    st.title("üìà An√°lise de Est√°gios")
    st.markdown(
        "<h4 style='font-size:20px;'>Distribui√ß√£o dos alunos por est√°gio (aprovado, reprovado, desist√™ncia, etc.)</h4>",
        unsafe_allow_html=True
    )
    df = load_excel_data()
    df['Estagio'] = df['Estagio'].astype(str).str.strip().str.lower()
    df['Estagio'] = df['Estagio'].replace({
        'desist√£¬™ncia': 'desistencia',
        'desist√™ncia': 'desistencia',
        'desistiu': 'desistencia',
        'sem interesse': 'desistencia',
        'desist√™ncia.': 'desistencia',
        'nan': 'desconhecido',
    })
    df['Estagio'] = df['Estagio'].fillna('desconhecido')
    status_counts = df['Estagio'].value_counts().reset_index()
    status_counts.columns = ['Status', 'Quantidade']
    plt.figure(figsize=(8, 5))
    sns.barplot(data=status_counts, x='Status', y='Quantidade', hue='Status', palette='Set2', legend=False)
    plt.title('Est√°gio dos Alunos (Padronizado)')
    plt.ylabel('Quantidade')
    plt.xlabel('Status')
    plt.xticks(rotation=45)
    plt.tight_layout()
    st.pyplot(plt)

def processo_seletivo():
    
    st.title("üìâ Motivos de Recusa dos Cursos Ofertados")
    st.markdown(
        "<h4 style='font-size:20px;'>Nesta se√ß√£o, analisamos os principais motivos relatados pelos candidatos para recusarem os cursos ofertados. Essa an√°lise ajuda a compreender os desafios enfrentados pelos alunos em potencial.</h4>",
        unsafe_allow_html=True
    )
    
    df = df_processos()

        # Padroniza os motivos
    df['Motivo Recusa Curso Ofertado'] = df['Motivo Recusa Curso Ofertado'].map(padronizar_motivos)
    contagem = df['Motivo Recusa Curso Ofertado'].value_counts()
    print(contagem)
    fig, ax = plt.subplots(figsize=(10, 6))
    contagem.plot(kind='bar', ax=ax, color='skyblue')
    ax.set_title('Principais Motivos de Recusa dos Cursos Ofertados')
    ax.set_xlabel('Motivo de Recusa')
    ax.set_ylabel('Quantidade de Candidatos')
    for i, v in enumerate(contagem):
        ax.text(i, v + 0.2, str(v), ha='center', va='bottom', fontsize=8)
        
    st.pyplot(fig)

# --- Configura√ß√£o da p√°gina e navega√ß√£o ---
st.set_page_config(page_title="An√°lise Escola da Nuvem", layout="wide")

st.sidebar.header("Navega√ß√£o")
opcao = st.sidebar.selectbox(
    "Escolha uma p√°gina",
    ["In√≠cio", "Alunos", "Empregabilidade", "Evas√£o", "Reprova√ß√£o", "Est√°gios", "Processo Seletivo"]
)

if opcao == "In√≠cio":
    pagina_inicio()
elif opcao == "Alunos":
    pagina_alunos()
elif opcao == "Empregabilidade":
    pagina_empregabilidade()
elif opcao == "Evas√£o":
    pagina_evasao()
elif opcao == "Reprova√ß√£o":
    pagina_reprovacao()
elif opcao == "Est√°gios":
    pagina_estagios()
elif opcao == "Processo Seletivo":
    processo_seletivo()
